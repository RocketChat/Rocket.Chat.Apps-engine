version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8.15-stretch

whitelist: &whitelist
  paths:
    - .git/*
    - .nyc_output/*
    - coverage/*
    - client/*
    - server/*
    - definition/*
    - lib/*
    - node_modules/*
    - src/*
    - tests/*
    - LICENSE
    - package.json
    - README.md
    - tsconfig.json
    - tslint.json
    - gulpfile.js

jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: npm install

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Lint TypeScript Code
          command: npm run lint

  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Compile TypeScript into JavaScript
          command: npm run compile

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Test TypeScript Code
          command: npm run unit-tests

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  publish:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: |
            export CIRCLE_TAG=${CIRCLE_TAG:=}
            export CIRCLE_BRANCH=${CIRCLE_BRANCH:=}

            if [[ $CIRCLE_TAG ]]; then
                npm publish --tag latest
            else
                # Add build number to the end of the version
                npm version --no-git-tag-version "$(node -p "require('./package.json').version").$CIRCLE_BUILD_NUM"
                if [[ $CIRCLE_BRANCH == 'new/videoconf' ]]; then
                    npm run go-publish-videoconf
                elif [[ $CIRCLE_BRANCH == 'alpha' ]]; then
                    npm run go-publish-alpha
                else
                    npm run go-publish-beta
                fi;
            fi;

workflows:
  version: 2

  build:
    jobs:
      - checkout:
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - checkout
          filters:
            tags:
              only: /^v.*/
      - lint:
          requires:
            - checkout
          filters:
            tags:
              only: /^v.*/
      - build:
          requires:
            - lint
            - test
          filters:
            tags:
              only: /^v.*/
      - publish:
          requires:
            - build
          filters:
              branches:
                only:
                  - alpha
                  - beta
                  - "new/videoconf"
              tags:
                only: /^v.*/
